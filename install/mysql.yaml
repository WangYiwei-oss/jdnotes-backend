apiVersion: apps/v1
kind: Deployment                                      #副本控制器deployment，管理pod和RS
metadata:
  namespace: jdnotes
  name: mysql                                            #deployment的名称，全局唯一
spec:
  replicas: 1                                                #Pod副本期待数量
  selector:
    matchLabels:                                         #定义RS的标签
      db: mysql                                          #符合目标的Pod拥有此标签
  strategy:                                                  #定义升级的策略
    type: RollingUpdate                               #滚动升级，逐步替换的策略
  template:                                                #根据此模板创建Pod的副本（实例）
    metadata:
      labels:
        db: mysql                                        #Pod副本的标签，对应RS的Selector
    spec:
      containers:                                          #Pod里容器的定义部分
      - name: mysql                                     #容器的名称
        image: mysql:8.0.19                           #容器对应的docker镜像
        volumeMounts:                                #容器内挂载点的定义部分
        - name: time-zone                            #容器内挂载点名称
          mountPath: /etc/localtime              #容器内挂载点路径，可以是文件或目录
        - name: mysql-data
          mountPath: /var/lib/mysql               #容器内mysql的数据目录
        - name: config
          mountPath: /etc/mysql/conf.d/my.cnf               #容器内mysql的数据目录
        ports:
        - containerPort: 3306                         #容器暴露的端口号
        env:                                                   #写入到容器内的环境容量
        - name: MYSQL_ROOT_PASSWORD   #定义了一个mysql的root密码的变量
          value: "123456"
      # health check

      # health check
      volumes:                                             #本地需要挂载到容器里的数据卷定义部分
      - name: time-zone                              #数据卷名称，需要与容器内挂载点名称一致
        hostPath:
          path: /etc/localtime                        #挂载到容器里的路径，将localtime文件挂载到容器里，可让容器使用本地的时区
      - name: mysql-data
        persistentVolumeClaim:
          claimName: mysql
      - name: config
        configMap:
          name: mysql-config

---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: jdnotes
  labels:
    db: mysql
spec:
  type: NodePort
  ports:
    - name: tcp
      port: 3306
      nodePort: 30336
  selector:
    db: mysql

